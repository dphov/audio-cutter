name: 'test-on-pr'
on: 
  pull_request:
    branches: [ "main" ]
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  macos-latest-ffmpeg-name:   "ffmpeg-x86_64-apple-darwin"
  ubuntu-latest-ffmpeg-name:  "ffmpeg-x86_64-unknown-linux-gnu"
  windows-latest-ffmpeg-name: "ffmpeg-x86_64-pc-windows-msvc.exe"

jobs:
  test-tauri:
    strategy:
      fail-fast: false
      matrix:
        platform: [macos-latest, ubuntu-latest, windows-latest]

    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v3
      - name: setup node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Setup pnpm
        uses: pnpm/action-setup@v2.4.0
      - name: install Rust stable
        uses: dtolnay/rust-toolchain@stable
      - name: install dependencies (ubuntu only)
        if: matrix.platform == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libgtk-3-dev libwebkit2gtk-4.0-dev libappindicator3-dev librsvg2-dev patchelf
      - name: install frontend dependencies
        run: pnpm install
      - name: ffmpeg release unpack from remote server
        run: wget -O ./src-tauri/binaries/ffmpeg.zip "https://evermeet.cx/ffmpeg/getrelease/ffmpeg/zip"
      - name: unzip ffmpeg
        run: unzip ./src-tauri/binaries/ffmpeg.zip -d .
      - name: list files src-tauri/binaries
        run: ls -la ./src-tauri/binaries
      - name: delete ffmpeg.zip 
        run: rm ./src-tauri/binaries/ffmpeg.zip
      - uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
